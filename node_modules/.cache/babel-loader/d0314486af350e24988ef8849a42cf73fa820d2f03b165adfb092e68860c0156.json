{"ast":null,"code":"//require('dotenv').config()\n//const express = require('express')\n//const mongoose = require('mongoose')\n//const MONGOURL = process.env.MONGO_URL\n//const workoutRoutes = require('./routes/workouts')\n//const userRoutes = require('./routes/user')\n// eslint-disable-next-line no-unused-vars\n//const Axios = require\n\n// express app\n//const app = express()\n// middleware\n//app.use(express.json())\n//app.use((req, res, next) => {\n//console.log(req.path, req.method)\n//next()\n//})\n\n// routes\n//app.use('/api/workouts', workoutRoutes)\n//app.use('/api/user', userRoutes)\n\n// connect to db\n//mongoose.connect(MONGOURL)\n//.then(() => {\n//console.log(\"Database is connected successfully.\");\n// listen for requests\n//app.listen(process.env.PORT, () => {\n//console.log('connected to server is running on port & listening on port', process.env.PORT);\n//})\n//})\n//.catch((error) => {\n//console.log(error)\n//})\n//Axios.get('/api/resource')\n//.then(response => {\n// Traitement de la réponse\n//})\n//.catch(error => {\n//if (error.response) {\n// Le serveur a répondu avec un code d'état différent de 2xx\n//console.log(error.response.data); // Données de la réponse\n//console.log(error.response.status); // Code d'état HTTP\n//console.log(error.response.headers); // En-têtes de la réponse\n//} else if (error.request) {\n// La requête a été faite mais aucune réponse n'a été reçue\n//console.log(error.request);\n//} else {\n// Une erreur s'est produite lors de la configuration de la requête\n//console.log('Error', error.message);\n//}\n//console.log(error.config); // Configuration de la requête Axios\n//});","map":{"version":3,"names":[],"sources":["C:/Users/Aby Ndiaye/red-product/client/server.js"],"sourcesContent":["//require('dotenv').config()\r\n//const express = require('express')\r\n//const mongoose = require('mongoose')\r\n//const MONGOURL = process.env.MONGO_URL\r\n//const workoutRoutes = require('./routes/workouts')\r\n//const userRoutes = require('./routes/user')\r\n// eslint-disable-next-line no-unused-vars\r\n//const Axios = require\r\n\r\n// express app\r\n//const app = express()\r\n// middleware\r\n//app.use(express.json())\r\n//app.use((req, res, next) => {\r\n  //console.log(req.path, req.method)\r\n  //next()\r\n//})\r\n\r\n// routes\r\n//app.use('/api/workouts', workoutRoutes)\r\n//app.use('/api/user', userRoutes)\r\n\r\n// connect to db\r\n//mongoose.connect(MONGOURL)\r\n  //.then(() => {\r\n    //console.log(\"Database is connected successfully.\");\r\n    // listen for requests\r\n    //app.listen(process.env.PORT, () => {\r\n      //console.log('connected to server is running on port & listening on port', process.env.PORT);\r\n    //})\r\n  //})\r\n  //.catch((error) => {\r\n    //console.log(error)\r\n//})\r\n//Axios.get('/api/resource')\r\n  //.then(response => {\r\n    // Traitement de la réponse\r\n  //})\r\n  //.catch(error => {\r\n    //if (error.response) {\r\n      // Le serveur a répondu avec un code d'état différent de 2xx\r\n      //console.log(error.response.data); // Données de la réponse\r\n      //console.log(error.response.status); // Code d'état HTTP\r\n      //console.log(error.response.headers); // En-têtes de la réponse\r\n    //} else if (error.request) {\r\n      // La requête a été faite mais aucune réponse n'a été reçue\r\n      //console.log(error.request);\r\n    //} else {\r\n      // Une erreur s'est produite lors de la configuration de la requête\r\n      //console.log('Error', error.message);\r\n    //}\r\n    //console.log(error.config); // Configuration de la requête Axios\r\n  //});\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACE;AACA;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACE;AACE;AACA;AACA;AACE;AACF;AACF;AACA;AACE;AACJ;AACA;AACE;AACE;AACF;AACA;AACE;AACE;AACA;AACA;AACA;AACF;AACE;AACA;AACF;AACE;AACA;AACF;AACA;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}